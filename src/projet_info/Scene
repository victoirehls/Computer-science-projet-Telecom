package projet_info;
import javax.swing.ImageIcon;

import java.awt.Color;
import projet_info.Astre;
//import javax.swing.JFrame;
import javax.swing.JPanel;

import java.awt.Graphics;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Random;
import java.awt.Graphics2D;

@SuppressWarnings("serial")
public class Scene extends JPanel {
	
	//*** CREATION DES VARIABLES ***// mettre toutes les images ici, mettre aussi variables de déplacement des joueurs (xpos1 et 2)
	private ImageIcon IcoFond;
	private Image ImFond;
	private int taille_case_x;  
	private int taille_case_y;  
	
	private int xFond; // l'absc de l'image de fond
	private int yFond;
	private int dx;
	private int dy; //deplacement vertical de l écran
	
	//variables relatives au tableau
	private int xrect1; //
	private int yrect1; //
	private int dxrect1; //
	private int dyrect1; //
	
	//2 variables pour bouger le joueur 1
	private int dyjoueur1;
	private int dxjoueur1;
	

	public Joueur perso1;
	public Joueur perso2;
	
	public Astre astre1; //
	public Astre astre2; //
	public Astre astre3; //
	public Astre astre4; //
	public Astre astre5; //
	public Astre astre6; //
	public Astre astre7; //
	public Astre astre8; //
	
	private static ArrayList<Astre> tabObjets; // tableau qui enregistre tous les astres
	// normalement, on devrait mettre <Unite>     //
	
	//*** LE CONSTRUCTEUR ***//
	
	public Scene() {
		
		super(); // faire appel au constructeur de la super classe
		this.xFond = 0; // commence par initialiser les variables position
		this.yFond = 0;
		this.taille_case_x = 71; //2560/256=10    //
		this.taille_case_y = 73;  //1920/240=8    //
		this.dx = 0;
		this.dy = 0;
		
		this.xrect1 = 0; //
		this.yrect1 = 0; //
		this.dxrect1 = 0;
		this.dyrect1 = 0;
	
		//téléchargement de l'image
		IcoFond = new ImageIcon(getClass().getResource("fond.png"));
		this.ImFond = this.IcoFond.getImage();
        

		
		this.perso1 = new Joueur("", 0, 0);
		this.perso2 = new Joueur("", 852, 584);
		
		
		//création automatique des astres
		tabObjets = new ArrayList<Astre>(); //
		for(int i =0; i<= 16; i++){
			Random random = new Random();
			int nb1;
			int nb2;
			nb1 = random.nextInt(9);
			nb2 = random.nextInt(7);
			Astre aastre = new Astre("astre" + i, nb1*200+100,80*nb1, 80*nb2, 1, i);
			this.tabObjets.add(aastre);
		}
	
		
		this.setFocusable(true);
		this.requestFocusInWindow();
		this.addKeyListener(new Clavier()); //pour écouter le clavier 
		
		//creation d une instance du chrono
		Thread chronoEcran = new Thread(new Chrono());
		chronoEcran.start();
		
	}
	
	//*** GETTERS SETTERS ****// Pour les générer: clic droit, source, generate getters
	
	public int getDx() {return dx;} // pour accéder à la valeur de dx
	public void setDx(int dx) {this.dx = dx;} // pour la modifier
	public int getDy() {return dy;}
	public void setDy(int dy) {this.dy = dy;}
	public int getxFond() {return xFond;}
	public void setxFond(int xFond) {this.xFond = xFond;}
	public int getyFond() {return yFond;}
	public void setyFond(int yFond) {this.yFond = yFond;}
	public void setDxrect1(int dxrect1) {this.dxrect1 = dxrect1;}
	public void setDyrect1(int dyrect1) {this.dyrect1 = dyrect1;}

	
	
	//*** LES METHODES ***//
	public static Astre peut_conquérir_astres(Joueur j) {	
		Astre res = null;
		for(int i=0; i<tabObjets.size();i++) {
			if(j.getX()== tabObjets.get(i).getX() && j.getY() == tabObjets.get(i).getY() && tabObjets.get(i).isConquis() == false){
				res = tabObjets.get(i);
		
			}
	}
		return res; }
	
	public static Astre peut_attaquer(Joueur j1, Joueur j2) {
		Astre res = null;
		Astre astre_attaque = null;
		
		//on regarde si le joueur1 est sur un astre
		for(int i=0; i<tabObjets.size();i++) {
			if(j1.getX()== tabObjets.get(i).getX() && j1.getY() == tabObjets.get(i).getY() ) {
				astre_attaque = tabObjets.get(i);
			}
		}
		//on regarde si cet astre est dans les territoires du joueur2
		for(int i1=0; i1<j2.getTerritoires().size(); i1++) {
			if(j2.getTerritoires().get(i1) == astre_attaque) {
				res = astre_attaque;
			}
		}
		
			return res ;
		}
	
	
	public static int getTaille() {
		int taille_totale = 0;
		for(int i =0; i<= Scene.tabObjets.size(); i++){
			taille_totale = taille_totale + Scene.tabObjets.get(i).getTaille();
				}
		return taille_totale;	
	}

	

	public void Deplacmtfond() {
		this.xFond += this.dx;
		this.yFond += this.dy;
		//on bouge l ecran avec des touches d ordi
		this.xrect1 += this.dxrect1; //
		this.yrect1 += this.dyrect1; //
	}
	
	public void Deplacmtvaisseau() {
		perso1.setX(perso1.getX() + dx);
		perso1.setY(perso1.getY() + dy);
		perso2.setX(perso2.getX() + dx);
		perso2.setY(perso2.getY() + dy);
		
	}

	@SuppressWarnings("exports")
	public void création_grille(Graphics g) {       //
		Graphics gg = (Graphics2D)g;                //
		for (int i = 0; i<11; i++ ) {
			for (int j = 0; j<9; j++) {
				gg.drawRect(xrect1+(taille_case_x)*i, yrect1+(taille_case_y)*j, taille_case_x, taille_case_y);
				gg.setColor(Color.WHITE);}}
	}

	@SuppressWarnings("exports")
	public void paintComponent(Graphics g) {  //méthode qui gère la peinture de l'écran
		super.paintComponent(g);
		Graphics gc = (Graphics2D)g;
		this.Deplacmtfond();
		this.Deplacmtvaisseau();
		
		//déplacement des astres
		for(int i=0; i< this.tabObjets.size(); i++) {this.tabObjets.get(i).deplacement();}
		gc.drawImage(this.ImFond, this.xFond, this.yFond, null);
		
		// tracé des astres
		for(int i=0; i<this.tabObjets.size();i++) {
			gc.drawImage(this.tabObjets.get(i).getImgObj(), this.tabObjets.get(i).getX(),this.tabObjets.get(i).getY(),null);
			int X = tabObjets.get(i).getX();
			int Y = tabObjets.get(i).getY();
			gc.drawString(tabObjets.get(i).getNom(), X+20, Y+20);
			gc.drawString(Integer.toString(tabObjets.get(i).getTaille()), X+30, Y+30);
		}
		gc.drawRect(xrect1, yrect1, taille_case_x,taille_case_y); 
		this.création_grille(gc); 
		
		int X1 = perso1.getX();
		int Y1 = perso1.getY();
		int X2 = perso2.getX();
		int Y2 = perso2.getY();

		gc.drawImage(this.perso1.getImgObj(),X1,Y1,null); 
		gc.drawString("Joueur1", X1, Y1+20);
		
		gc.drawImage(this.perso2.getImgObj(),X2,Y2,null); 
		gc.drawString("Joueur2", X2+20, Y2+20);
	}

	

}
