package projet_info;
import java.awt.BorderLayout;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.util.ArrayList;

import javax.imageio.ImageIO;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JSplitPane;
import javax.swing.Spring;
import javax.swing.SpringLayout;

import audio.Audio;
import javafx.scene.image.Image; 

public class Fenetre extends JFrame implements ActionListener{
	
	//*** VARIABLES ***//
	
	private static String joueur1;
	private static String joueur2;
	private JLabel lab1;
	private JLabel lab2;
	private JLabel lab3;
	private JLabel ptsactions1;
	private JLabel ptsactions2;
	private JLabel exp1;
	private JLabel ptsconq1;
	private JLabel exp2;
	private JLabel ptsconq2;
	private JLabel niveau2;
	private JLabel niveau1;
	
	static Joueur j1;
	static Joueur j2;
	
	
	//Boutons du joueur1
	private static JButton haut1 = new JButton("Haut");
	private static JButton bas1 = new JButton("Bas");
	private static JButton gauche1 = new JButton("Gauche");
	private static JButton droite1 = new JButton("Droite");
	private static JButton attaquer1 = new JButton("Attaquer");
	private static JButton finirtour1 = new JButton("Finir son tour");
	private static JButton conquerir1 = new JButton("Conquérir");

	
	//Boutons du joueur2
	private static JButton haut2 = new JButton("Haut");
	private static JButton bas2 = new JButton("Bas");
	private static JButton gauche2 = new JButton("Gauche");
	private static JButton droite2 = new JButton("Droite");
	private static JButton attaquer2 = new JButton("Attaquer");
	private static JButton finirtour2 = new JButton("Finir son tour");
	private static JButton conquerir2 = new JButton("Conquérir");
	
	JPanel J1 = new JPanel();
	SpringLayout pan = new SpringLayout();
    JPanel pan2 = new JPanel(pan);
    JPanel pan1 = new JPanel(pan);
    Spring ressort = Spring.constant(0, 50, 50); 
    Spring ressort2 = Spring.constant(0, 1270, 1320);
	private Component drawImage;

	
	public static Scene scene = new Scene();
	public static Font policeFin;
	
	//images d'astres
	private ImageIcon icoObj1;
	private java.awt.Image imgObj1;
	private ImageIcon icoObj2;
	private java.awt.Image imgObj2;
	
	
	
	//*** CONSTRUCTEUR ***// 
	@SuppressWarnings("deprecation")
	public Fenetre(){
		 
			super();
			this.setTitle("Scene principale");
			this.setSize(1280, 830);
			this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			this.setLocationRelativeTo(null);
			this.setResizable(false);
			this.setAlwaysOnTop(true);
			
			//initialisation des images d'astres conquis
			icoObj1 = new ImageIcon(getClass().getResource("soleil4.png")); //
			imgObj1 = this.icoObj1.getImage(); //
			icoObj2 = new ImageIcon(getClass().getResource("soleil5.png")); //
			imgObj2 = this.icoObj2.getImage(); //
			
			//récupération nom joueur1
			this.joueur1 = FenNomsJoueurs.getJTextField1();
			j1 = scene.perso1;
			j1.setNom(joueur1);
			j1.main = 1;
			
			Font policeFin = new Font("Arial", Font.BOLD,50);
			
			//Ecriture du nom du joueur1
			this.lab1 = new JLabel(joueur1);
			Font police = new Font("Tahoma", Font.BOLD, 16); 
			lab1.setFont(police);
			lab1.setForeground(Color.blue);  
			//lab1.setHorizontalAlignment(JLabel.CENTER);
			
			//affichage points action joueur1
			this.ptsactions1 = new JLabel("Points d'action : " + Double.toString(j1.getPoints_dactions()));
			this.ptsactions1.setFont(police);
			this.ptsactions1.setForeground(Color.orange);  
			this.ptsactions1.setHorizontalAlignment(JLabel.CENTER);
			
			//affichage points conquetes joueur1
			this.ptsconq1 = new JLabel("Points conquêtes : " + Double.toString(j1.getPoints_conquetes()));
			this.ptsconq1.setFont(police);
			this.ptsconq1.setForeground(Color.orange);  
			this.ptsconq1.setHorizontalAlignment(JLabel.CENTER);
			
			//affichage expé joueur1
			this.exp1 = new JLabel("Expérience : " + Double.toString(j1.getExperience()));
			this.exp1.setFont(police);
			this.exp1.setForeground(Color.orange);  
			this.exp1.setHorizontalAlignment(JLabel.CENTER);
			
			//réglage des polices pour tous les boutons
			haut1.setBackground(Color.red);
			haut1.setForeground(Color.black);
			haut1.setFont(new java.awt.Font("Tahoma",1,16));
			haut2.setBackground(Color.red);
			haut2.setForeground(Color.black);
			haut2.setFont(new java.awt.Font("Tahoma",1,16));
			gauche1.setBackground(Color.red);
			gauche1.setForeground(Color.black);
			gauche1.setFont(new java.awt.Font("Tahoma",1,16));
			gauche2.setBackground(Color.red);
			gauche2.setForeground(Color.black);
			gauche2.setFont(new java.awt.Font("Tahoma",1,16));
			droite1.setBackground(Color.red);
			droite1.setForeground(Color.black);
			droite1.setFont(new java.awt.Font("Tahoma",1,16));
			droite2.setBackground(Color.red);
			droite2.setForeground(Color.black);
			droite2.setFont(new java.awt.Font("Tahoma",1,16));
			bas1.setBackground(Color.red);
			bas1.setForeground(Color.black);
			bas1.setFont(new java.awt.Font("Tahoma",1,16));
			bas2.setBackground(Color.red);
			bas2.setForeground(Color.black);
			bas2.setFont(new java.awt.Font("Tahoma",1,16));
			attaquer1.setBackground(Color.red);
			attaquer1.setForeground(Color.black);
			attaquer1.setFont(new java.awt.Font("Tahoma",1,16));
			attaquer2.setBackground(Color.red);
			attaquer2.setForeground(Color.black);
			attaquer2.setFont(new java.awt.Font("Tahoma",1,16));
			finirtour1.setBackground(Color.red);
			finirtour1.setForeground(Color.black);
			finirtour1.setFont(new java.awt.Font("Tahoma",1,16));
			finirtour2.setBackground(Color.red);
			finirtour2.setForeground(Color.black);
			finirtour2.setFont(new java.awt.Font("Tahoma",1,16));
			conquerir2.setBackground(Color.red);
			conquerir2.setForeground(Color.black);
			conquerir2.setFont(new java.awt.Font("Tahoma",1,16));
			conquerir1.setBackground(Color.red);
			conquerir1.setForeground(Color.black);
			conquerir1.setFont(new java.awt.Font("Tahoma",1,16));
			
			//récupération joueur2 nom
			this.joueur2 = FenNomsJoueurs.getJTextField2();
			j2 = scene.perso2;
			j2.setNom(joueur2);
			j2.main = 0;
		
			//affichage points d'action joueur2
			this.ptsactions2= new JLabel("Points d'action : " + Double.toString(j2.getPoints_dactions()));
			this.ptsactions2.setFont(police);
			this.ptsactions2.setForeground(Color.orange);  
			this.ptsactions2.setHorizontalAlignment(JLabel.CENTER);
			
			//affichage points conquete joueur2
			this.ptsconq2 = new JLabel("Points conquêtes : " + Double.toString(j2.getPoints_conquetes()));
			this.ptsconq2.setFont(police);
			this.ptsconq2.setForeground(Color.orange);  
			this.ptsconq2.setHorizontalAlignment(JLabel.CENTER);
			
			//affichage expé joueur2
			this.exp2 = new JLabel("Expérience : " + Double.toString(j2.getExperience()));
			this.exp2.setFont(police);
			this.exp2.setForeground(Color.orange);  
			this.exp2.setHorizontalAlignment(JLabel.CENTER);
			
			//affichage nom joueur2
			this.lab2 = new JLabel(joueur2);
			lab2.setFont(police);
			lab2.setForeground(Color.blue);  
			lab2.setHorizontalAlignment(JLabel.CENTER);
			
			this.lab3 = new JLabel("Tour n°1" + " - A " + joueur1 + " de jouer");
			
			Font police1 = new Font("Tahoma", Font.BOLD, 20); 
			lab3.setFont(police1);  
			lab3.setForeground(Color.RED);  
			lab3.setHorizontalAlignment(JLabel.CENTER);
			lab3.setOpaque(true);
			lab3.setBackground(Color.BLACK);
			
			//Mettre en écoute les boutons
			haut1.addActionListener(this);
			haut2.addActionListener(this);
			bas1.addActionListener(this);
			bas2.addActionListener(this);
			gauche1.addActionListener(this);
			gauche2.addActionListener(this);
			droite1.addActionListener(this);
			droite2.addActionListener(this);
			attaquer1.addActionListener(this);
			attaquer2.addActionListener(this);
			finirtour1.addActionListener(this);
			finirtour2.addActionListener(this);
			conquerir1.addActionListener(this);
			conquerir2.addActionListener(this);

			
			//Panneau informations joueur1
			J1.setLayout(new BoxLayout(J1, BoxLayout.PAGE_AXIS));
			J1.add(lab1);
			J1.add(exp1);
			J1.add(ptsconq1);
			this.niveau1 = new JLabel("Niveau : " + Integer.toString(j1.getNiveau()));
			niveau1.setFont(police);
			niveau1.setForeground(Color.orange);  
			niveau1.setHorizontalAlignment(JLabel.CENTER);
			J1.add(niveau1);
		    J1.add(ptsactions1);

		    
			//Panneau informations joueur2
		    JPanel J2 = new JPanel();
			J2.setLayout(new BoxLayout(J2, BoxLayout.PAGE_AXIS));
			J2.add(lab2);
			J2.add(exp2);
			J2.add(ptsconq2);
			this.niveau2 = new JLabel("Niveau : " + Integer.toString(j2.getNiveau()));
			niveau2.setFont(police);
			niveau2.setForeground(Color.orange);  
			niveau2.setHorizontalAlignment(JLabel.CENTER);
			J2.add(niveau2);
		    J2.add(ptsactions2);
		    
		    
	        //ajouter les différents boutons 
			pan1.add(haut1);
			pan1.add(bas1);
			pan1.add(gauche1);
			pan1.add(droite1);
			pan1.add(attaquer1);
			pan1.add(finirtour1);
			pan1.add(conquerir1);
			J1.add(pan1);
			conquerir1.setEnabled(false);
			attaquer1.setEnabled(false);
			pan2.add(haut2);
			pan2.add(bas2);
			pan2.add(gauche2);
			pan2.add(droite2);		
			pan2.add(attaquer2);
			pan2.add(finirtour2);
			pan2.add(conquerir2);	
			J2.add(pan2);
			conquerir2.setEnabled(false);
			attaquer2.setEnabled(false);
			
			//création et utilisation de ressorts permettant de séparer les boutons
			pan.putConstraint(SpringLayout.NORTH, haut1, ressort, SpringLayout.NORTH, getContentPane());
			pan.putConstraint(SpringLayout.NORTH, bas1, ressort, SpringLayout.SOUTH, haut1);
			pan.putConstraint(SpringLayout.NORTH, gauche1, ressort, SpringLayout.SOUTH, bas1);
			pan.putConstraint(SpringLayout.NORTH, droite1, ressort, SpringLayout.SOUTH, gauche1);
			pan.putConstraint(SpringLayout.NORTH, attaquer1, ressort, SpringLayout.SOUTH, droite1);
			pan.putConstraint(SpringLayout.NORTH, conquerir1, ressort, SpringLayout.SOUTH, attaquer1);
			pan.putConstraint(SpringLayout.NORTH, finirtour1, ressort, SpringLayout.SOUTH, conquerir1);
			
			pan.putConstraint(SpringLayout.NORTH, haut2, ressort, SpringLayout.NORTH, getContentPane());
			pan.putConstraint(SpringLayout.NORTH, bas2, ressort, SpringLayout.SOUTH, haut2);
			pan.putConstraint(SpringLayout.NORTH, gauche2, ressort, SpringLayout.SOUTH, bas2);
			pan.putConstraint(SpringLayout.NORTH, droite2, ressort, SpringLayout.SOUTH, gauche2);
			pan.putConstraint(SpringLayout.NORTH, attaquer2, ressort, SpringLayout.SOUTH, droite2);
			pan.putConstraint(SpringLayout.NORTH, conquerir2, ressort, SpringLayout.SOUTH, attaquer2);
			pan.putConstraint(SpringLayout.NORTH, finirtour2, ressort, SpringLayout.SOUTH, conquerir2);

			this.setLayout(new BorderLayout());
		    
	        add(lab3, BorderLayout.NORTH);
	        add(J1, BorderLayout.WEST);
	        add(J2, BorderLayout.EAST);
	        add(scene, BorderLayout.CENTER);
	       
	        if(Scene.peut_conquérir_astres(j1)!= null) {conquerir1.setEnabled(true);}
	        
			//affichage général
			setDefaultCloseOperation(EXIT_ON_CLOSE);
			this.setVisible(true);	
	}
	
	//*** METHODES ***//  
	//ceci est la méthode de suivi des actions des boutons
		@SuppressWarnings("deprecation")
	public void actionPerformed(ActionEvent arg0) {
			if(j1.getMain()==1 && j1.getPoints_dactions()>=0) {
				if(arg0.getSource() == haut1 && j1.getPoints_dactions()>=2) {
					j1.setY(j1.getY()-77);
					j1.setPoints_dactions(j1.getPoints_dactions()-2);
					ptsactions1.setText("Points d'actions : " + Integer.toString(j1.getPoints_dactions()));	
					if(Scene.peut_conquérir_astres(j1)!= null) 
						conquerir1.setEnabled(true); 
					if(Scene.peut_attaquer(j1, j2)!= null) 
						attaquer1.setEnabled(true);
				 	Audio.playSound("deplacement2.wav");
				}
				
				if(arg0.getSource() == bas1 && j1.getPoints_dactions()>=2) {
					j1.setY(j1.getY()+77);
					j1.setPoints_dactions(j1.getPoints_dactions()-2);
					ptsactions1.setText("Points d'actions : " + Integer.toString(j1.getPoints_dactions()));				
					if(Scene.peut_conquérir_astres(j1)!= null) 
						 conquerir1.setEnabled(true);
					if(Scene.peut_attaquer(j1, j2)!= null) 
						attaquer1.setEnabled(true);
					Audio.playSound("deplacement2.wav");
				}
				 
				if(arg0.getSource() == droite1 && j1.getPoints_dactions()>=2) {
					j1.setX(j1.getX()+77);
					j1.setPoints_dactions(j1.getPoints_dactions()-2);
					ptsactions1.setText("Points d'actions : " + Integer.toString(j1.getPoints_dactions()));
					if(Scene.peut_conquérir_astres(j1)!= null) 
						 conquerir1.setEnabled(true);
					if(Scene.peut_attaquer(j1, j2)!= null) 
						attaquer1.setEnabled(true);
					Audio.playSound("deplacement2.wav");
				}
				
				if(arg0.getSource() == gauche1 && j1.getPoints_dactions()>=2) {
					j1.setX(j1.getX()-77);
					j1.setPoints_dactions(j1.getPoints_dactions()-2);
					ptsactions1.setText("Points d'actions : " + Integer.toString(j1.getPoints_dactions()));
			 	 	if(Scene.peut_conquérir_astres(j1)!= null) 
			 	 		conquerir1.setEnabled(true);
			 	 	if(Scene.peut_attaquer(j1, j2)!= null) 
			 	 		attaquer1.setEnabled(true);
			 	 	Audio.playSound("deplacement2.wav");
				}
			
				if(arg0.getSource() == finirtour1) {
					lab3.setText("Tour n°" + Integer.toString(j2.getTour()) + " - A " + joueur2 + " de jouer"); 
					Joueur.passer_tour(j1,j2);
				 	ptsactions1.setText("Points d'actions : " + Integer.toString(j1.getPoints_dactions()));
				 	ptsconq1.setText("Points conquêtes : " + Integer.toString(j1.getPoints_conquetes()));
				 	exp1.setText("Expérience : " + Double.toString(j1.getExperience()));
				 	niveau1.setText("Niveau : " + Integer.toString(j1.getNiveau()));
				 	finirtour1.setEnabled(false);
				 	finirtour2.setEnabled(true);
				 	haut1.setEnabled(false);
				 	haut2.setEnabled(true);
				 	bas1.setEnabled(false);
				 	bas2.setEnabled(true);
				 	gauche1.setEnabled(false);
				 	gauche2.setEnabled(true);
				 	droite1.setEnabled(false);
				 	droite2.setEnabled(true);
				 	Audio.playSound("passetour.wav");
				}
				
				if(arg0.getSource() == conquerir1 && j1.getPoints_dactions()>=1) {
			 		conquerir1.setEnabled(false);
			 		j1.setX(j1.getX());
			 		j1.setY(j1.getY());
			 		Astre a = Scene.peut_conquérir_astres(j1);
			 		j1.conquerir(a,j1);

			 		a.setIcoObj(icoObj1);
					a.setImgObj(imgObj1);
					
			 		ptsactions1.setText("Points d'actions : " + Integer.toString(j1.getPoints_dactions()));
			 		ptsconq1.setText("Points conquêtes : " + Integer.toString(j1.getPoints_conquetes()));
			 		exp1.setText("Expérience : " + Double.toString(j1.getExperience()));
			 		Audio.playSound("victoire.wav");
				}
				
				if(arg0.getSource() == attaquer1 && j1.getPoints_dactions()>=2) {
					 Astre astre_attaque = Scene.peut_attaquer(j1, j2);
					 if(astre_attaque != null)
						attaquer1.setEnabled(false);
						j1.attaquer(j1, j2, astre_attaque);
					 	Audio.playSound("battle2.wav");
					 	astre_attaque.setIcoObj(icoObj1);
					 	astre_attaque.setImgObj(imgObj1);	 
					 	ptsactions1.setText("Points d'actions : " + Integer.toString(j1.getPoints_dactions()));
					 	ptsconq1.setText("Points conquêtes : " + Integer.toString(j1.getPoints_conquetes()));
					 	exp1.setText("Expérience : " + Double.toString(j1.getExperience()));
				}
			
			}
			
			if(j2.getMain()==1 && j2.getPoints_dactions()>=0) {
				if(arg0.getSource() == bas2  && j2.getPoints_dactions()>=2)  {
					j2.setY(j2.getY()+77);
					j2.setPoints_dactions(j2.getPoints_dactions()-2);
					ptsactions2.setText("Points d'actions : " + Integer.toString(j2.getPoints_dactions()));
					if(Scene.peut_conquérir_astres(j2)!= null) 
						conquerir2.setEnabled(true);
					if(Scene.peut_attaquer(j2, j1)!= null) 
						attaquer2.setEnabled(true);		
					Audio.playSound("deplacement2.wav");
				}
				
				if(arg0.getSource() == haut2  && j2.getPoints_dactions()>=2) {
					j2.setY(j2.getY()-77);
					j2.setPoints_dactions(j2.getPoints_dactions()-2);
					ptsactions2.setText("Points d'actions : " + Integer.toString(j2.getPoints_dactions()));
					if(Scene.peut_conquérir_astres(j2)!= null)
						conquerir2.setEnabled(true);
					if(Scene.peut_attaquer(j2, j1)!= null) 
						attaquer2.setEnabled(true);			
					Audio.playSound("deplacement2.wav");
				}
		
				if(arg0.getSource() == gauche2 && j2.getPoints_dactions()>=2) {
					j2.setX(j2.getX()-77); 
					j2.setPoints_dactions(j2.getPoints_dactions()-2);
					ptsactions2.setText("Points d'actions : " + Integer.toString(j2.getPoints_dactions()));
					if(Scene.peut_conquérir_astres(j2)!= null) 
						conquerir2.setEnabled(true);
					if(Scene.peut_attaquer(j2, j1)!= null) 
						attaquer2.setEnabled(true);		
					Audio.playSound("deplacement2.wav");
				}
				
				if(arg0.getSource() == droite2 && j2.getPoints_dactions()>=2) { 
					j2.setX(j2.getX()+77); 
					j2.setPoints_dactions(j2.getPoints_dactions()-2);
					ptsactions2.setText("Points d'actions : " + Integer.toString(j2.getPoints_dactions()));
					if(Scene.peut_conquérir_astres(j2)!= null) 
						conquerir2.setEnabled(true);
					if(Scene.peut_attaquer(j2, j1)!= null) 
						attaquer2.setEnabled(true);			
					Audio.playSound("deplacement2.wav");
				}
			 
				if(arg0.getSource() == finirtour2) {
					lab3.setText("Tour n°" + Integer.toString(j1.getTour()) + " - A " + joueur1 +" de jouer"); 
					Joueur.passer_tour(j2,j1);
					ptsactions2.setText("Points d'actions : " + Integer.toString(j2.getPoints_dactions()));
					ptsconq2.setText("Points conquêtes : " + Integer.toString(j2.getPoints_conquetes()));
					exp2.setText("Expérience : " + Double.toString(j2.getExperience()));
					niveau2.setText("Niveau : " + Integer.toString(j2.getNiveau()));
					finirtour2.setEnabled(false);
				 	finirtour1.setEnabled(true);
				 	haut2.setEnabled(false);
				 	haut1.setEnabled(true);
				 	bas2.setEnabled(false);
				 	bas1.setEnabled(true);
				 	gauche2.setEnabled(false);
				 	gauche1.setEnabled(true);
				 	droite2.setEnabled(false);
				 	droite1.setEnabled(true);
				 	Audio.playSound("passetour.wav");
				}
				
			 	if(arg0.getSource() == conquerir2 && j2.getPoints_dactions()>=1) {
			 		conquerir2.setEnabled(false);
			 		j2.setX(j2.getX());
			 		j2.setY(j2.getY());
			 		Astre a = Scene.peut_conquérir_astres(j2);
			 		j2.conquerir(a,j2);
					
			 		a.setIcoObj(icoObj2);
					a.setImgObj(imgObj2);
					
			 		ptsactions2.setText("Points d'actions : " + Integer.toString(j2.getPoints_dactions()));
			 		ptsconq2.setText("Points conquêtes : " + Integer.toString(j2.getPoints_conquetes()));
			 		exp2.setText("Expérience : " + Double.toString(j2.getExperience()));
			 		Audio.playSound("victoire.wav");	
				}

			 	if(arg0.getSource() == attaquer2 && j2.getPoints_dactions()>=2) {
					Astre astre_attaque = Scene.peut_attaquer(j2, j1);
					if(astre_attaque != null)
						attaquer2.setEnabled(false);
						j2.attaquer(j2, j1, astre_attaque);
						Audio.playSound("battle2.wav");
						astre_attaque.setIcoObj(icoObj2);
						astre_attaque.setImgObj(imgObj2);
						ptsactions2.setText("Points d'actions : " + Integer.toString(j2.getPoints_dactions()));
						ptsconq2.setText("Points conquêtes : " + Integer.toString(j2.getPoints_conquetes()));
						exp2.setText("Expérience : " + Double.toString(j2.getExperience()));
			    }
			}
	}
		
	
	public static void fermer_boutons() {
		conquerir1.setEnabled(false);
		gauche1.setEnabled(false);
		droite1.setEnabled(false);			
		bas1.setEnabled(false);
		finirtour1.setEnabled(false);
		attaquer1.setEnabled(false);		
		haut1.setEnabled(false);
		conquerir2.setEnabled(false);
		gauche2.setEnabled(false);			
		droite2.setEnabled(false);
		bas2.setEnabled(false);
		finirtour2.setEnabled(false);
		attaquer2.setEnabled(false);
		haut2.setEnabled(false);}
				
					
				
				
		//*** GETTER SETTER ***//


		public static String getJoueur1() {return joueur1;}
		public static String getJoueur2() {return joueur2;}
		public static Font getPoliceFin() {return policeFin;}
		public static void setPoliceFin(Font policeFin) {Fenetre.policeFin = policeFin;}
		
}



			 
			 
			 
			 

			 

			
				 
		
